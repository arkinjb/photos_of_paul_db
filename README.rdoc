== README

# Photos of Paul
* Photos of Paul is an Instagram type website for photos of Paul from WDI (he knows about it and is okay with it).
* Users will be able to upload their pictures of Paul and comment on existing pictures.
* The idea came from a kind of but, not totally, serious conversation about needing filler pictures for seed data.

# User Stories

* I want to sign up for a new account
* I want to log in to my account
* I want to upload a photo
* I want to add a title to my photo
* I want to comment on any photo
* I want to see other uploaded photos
* I want to see the photos even if I'm not logged in
* I want to have a profile page that lists my uploads
* I want to edit/delete my own comments
* I want to tag or favorite specific photos
* I want to search by key word
* As an admin, I want to edit/delete all photos and comments.
* As an admin, I want to delete users.

# Technology used

* Ruby on Rails
* Hand rolled user authentication (from railstutorial.org)
* Cancancan gem for user authorization
* will_paginate gem for thumbnail pagination
* Paperclip gem and Amazon AWS for photo upload and storage
* Figaro gem
* Bcrypt gem for password hashing
* Handrolled css - used flexbox to center the header
* Deployed on Heroku

# Approach

* Started with basic crud functions for two models - post and user
* Used photo URL to add photo
* added basic styling and containers to position elements
* Added comments model and relevant crud functions
* Hand rolled user authentication - added login/logout/signup - used Sessions controller and helper module
* Added favorite photo model and join table to connect user and photo
* added pagination to main page
* Added search function to header
* Added more styling including header and form styling
* Added user authorization through cancancan
* Added paperclip gem and file upload - changed from photo URL to file upload
* Used figaro gem to test paperclip in development environment
* Deployed to Heroku
* used environment variables to hide AWS keys when in production
* Refactored during pair programming

# Unresolved

* Add flexbox to the main display on the index page so that it resizes correctly when screen is resized.
* Add zclipboard gem functionality to a copy image URL button.
* Used old CSS to make clear search link look like a regular form button - need to style all submit buttons the same so that CSS validates
* Needs more styling
